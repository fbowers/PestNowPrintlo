class PaymentsController < ApplicationController
#layout 'orderpads'
  layout 'authorize_net'
  helper :authorize_net
  protect_from_forgery :except => :relay_response

skip_before_filter :verify_authenticity_token 
# GET
  # Displays a payment form.
  def payment
    @id = params[:id]
    @order = Order.find(params[:id])
    @amount = params[:amount]
   #transaction = AuthorizeNet::AIM::Transaction.new('YOUR_API_LOGIN_ID', 'YOUR_TRANSACTION_KEY',  :gateway => :sandbox)
#credit_card = AuthorizeNet::CreditCard.new('4111111111111111', '1120')
#response = transaction.purchase('11.00', credit_card)

 #   if response.success?
 # puts "Successfully made a purchase (authorization code: #{response.authorization_code})"
#else
#  raise "Failed to make purchase."
#end
     @sim_transaction = AuthorizeNet::SIM::Transaction.new(AUTHORIZE_NET_CONFIG['api_login_id'], AUTHORIZE_NET_CONFIG['api_transaction_key'], @amount, :hosted_payment_form => true)
   # @sim_transaction.set_hosted_payment_receipt(AuthorizeNet::SIM::HostedReceiptPage.new(:link_method => AuthorizeNet::SIM::HostedReceiptPage::LinkMethod::GET, :link_text => 'Continue', :link_url => payments_thank_you_url(:only_path => false)))
  end
  
  # GET
  # Displays a thank you page.
  def thank_you
    @auth_code = params[:x_auth_code]
    @orderid = params[:x_invoice_num]
    @custledger = Customerledger.new()
    @custledger.update_attributes(:InsertTime => Time.now, :Active => 1, :PropertyId => @orderid, :UpdateUserId => current_user.UserId, :EntryDate => Time.now, :UpdateTime => Time.now, :UpdateReason => "Entry From Road App", :CCAuthNumber => @auth_code)
  end
   # POST
  # Displays a payment form.
  def payment3
    @amount = 10.00
    @sim_transaction = AuthorizeNet::SIM::Transaction.new(AUTHORIZE_NET_CONFIG['api_login_id'], AUTHORIZE_NET_CONFIG['api_transaction_key'], @amount, :relay_url => relay_response_url(:only_path => false))
  end

  # POST
  # Returns relay response when Authorize.Net POSTs to us.
  def relay_response
    sim_response = AuthorizeNet::SIM::Response.new(params)
    if sim_response.success?(AUTHORIZE_NET_CONFIG['api_login_id'], AUTHORIZE_NET_CONFIG['merchant_hash_value'])
      render :text => sim_response.direct_post_reply(receipt_url(:only_path => false), :include => true)
    else
      render :text => sim_response.direct_post_reply(error_url(:only_path => false), :include => true)
    end
  end

  # GET
  # Displays a receipt.
  def receipt
    sim_response = AuthorizeNet::SIM::Response.new(params)
    if sim_response.valid_md5?(AUTHORIZE_NET_CONFIG['api_login_id'], AUTHORIZE_NET_CONFIG['merchant_hash_value'])
      @transaction_id = sim_response.transaction_id
    else
      render :text => 'Sorry, we failed to validate your response. Please check that your "Merchant Hash Value" is set correctly in the config/authorize_net.yml file.'
    end
  end

  # GET
  # Displays an error page.
  def error
    sim_response = AuthorizeNet::SIM::Response.new(params)
    if sim_response.valid_md5?(AUTHORIZE_NET_CONFIG['api_login_id'], AUTHORIZE_NET_CONFIG['merchant_hash_value'])
      @reason = sim_response.response_reason_text
      @reason_code = sim_response.response_reason_code
      @response_code = sim_response.response_code
    else
      render :text => 'Sorry, we failed to validate your response. Please check that your "Merchant Hash Value" is set correctly in the config/authorize_net.yml file.'
    end
  end

end
